单例模式：被单例打对象只能有一个实例存在。
实现方式：一个类能返回对象的一个引用（永远是同一个）和一个获得该唯一实例的方法（必须为静态方法）

1.饿汉模式
	最常见、最简单的单例模式写法之一。顾名思义，“饿汉模式” 就是很 “饥渴”，所以一上来就需要给它新建
一个实例。但这种方法有一个明显的缺点，那就是不管有没有调用过获得实例的方法（本例中为 getWife() ），
每次都会新建一个实例。

2.懒汉模式
	最常见、最简单的单例模式之二，跟 “饿汉模式” 是 “好基友”。再次顾名思义，“懒汉模式” 就是它很懒，
一开始不新建实例，只有当它需要使用的时候，会先判断实例是否为空，如果为空才会新建一个实例来使用。

3.线程安全的懒汉模式
	上面的懒汉模式却存在一个严重的问题。那就是如果有多个线程并行调用 getWife() 方法的时候，还是会
创建多个实例，单例模式就失效了。我们在基本的懒汉模式上，把它设为线程同步（synchronized）就好了。
synchronized 的作用就是保证在同一时刻最多只有一个线程运行，这样就避免了多线程带来的问题。